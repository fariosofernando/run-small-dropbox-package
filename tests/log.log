/get_temporary_upload_link
VERSION

1

DESCRIPTION
Get a one-time use temporary upload link to upload a file to a Dropbox location. This endpoint acts as a delayed upload. The returned temporary upload link may be used to make a POST request with the data to be uploaded. The upload will then be perfomed with the CommitInfo previously provided to get_temporary_upload_link but evaluated only upon consumption. Hence, errors stemming from invalid CommitInfo with respect to the state of the user's Dropbox will only be communicated at consumption time. Additionally, these errors are surfaced as generic HTTP 409 Conflict responses, potentially hiding issue details. The maximum temporary upload link duration is 4 hours. Upon consumption or expiration, a new link will have to be generated. Multiple links may exist for a specific upload path at any given time. The POST request on the temporary upload link must have its Content-Type set to "application/octet-stream". Example temporary upload link consumption request: curl -X POST https://content.dropboxapi.com/apitul/1/bNi2uIYF51cVBND --header "Content-Type: application/octet-stream" --data-binary @local_file.txt A successful temporary upload link consumption request returns the content hash of the uploaded data in JSON format. Example successful temporary upload link consumption response: {"content-hash": "599d71033d700ac892a0e48fa61b125d2f5994"} An unsuccessful temporary upload link consumption request returns any of the following status codes: HTTP 400 Bad Request: Content-Type is not one of application/octet-stream and text/plain or request is invalid. HTTP 409 Conflict: The temporary upload link does not exist or is currently unavailable, the upload failed, or another error happened. HTTP 410 Gone: The temporary upload link is expired or consumed. Example unsuccessful temporary upload link consumption response: Temporary upload link has been recently consumed.

URL STRUCTURE
https://api.dropboxapi.com/2/files/get_temporary_upload_link
AUTHENTICATION
User Authentication
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.content.write
EXAMPLE
Get access token for:
application_cuppen.app
curl -X POST https://api.dropboxapi.com/2/files/get_temporary_upload_link \
    --header "Authorization: Bearer <get access token>" \
    --header "Content-Type: application/json" \
    --data "{\"commit_info\":{\"autorename\":true,\"mode\":\"add\",\"mute\":false,\"path\":\"/Homework/math/Matrices.txt\",\"strict_conflict\":false},\"duration\":3600}"
PARAMETERS
{
    "commit_info": {
        "autorename": true,
        "mode": "add",
        "mute": false,
        "path": "/Homework/math/Matrices.txt",
        "strict_conflict": false
    },
    "duration": 3600
}
GetTemporaryUploadLinkArg
commit_infoCommitInfoContains the path and other optional modifiers for the future upload commit. Equivalent to the parameters provided to upload.
durationFloat64(min=60.0, max=14400.0)How long before this link expires, in seconds. Attempting to start an upload with this link longer than this period of time after link creation will result in an error. The default for this field is 14400.0.
 
/get_thumbnail
VERSION

2

DESCRIPTION
Get a thumbnail for an image. This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.

URL STRUCTURE
https://content.dropboxapi.com/2/files/get_thumbnail_v2
AUTHENTICATION
User Authentication, App Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
Content-download
REQUIRED SCOPE
files.content.read
EXAMPLE
Get app key and secret for:
application_cuppen.app
curl -X POST https://content.dropboxapi.com/2/files/get_thumbnail_v2 \
    --header "Authorization: Basic <get app key and secret>" \
    --header "Dropbox-API-Arg: {\"format\":\"jpeg\",\"mode\":\"strict\",\"quality\":\"quality_80\",\"resource\":{\".tag\":\"path\",\"path\":\"/a.docx\"},\"size\":\"w64h64\"}"
PARAMETERS
{
    "format": "jpeg",
    "mode": "strict",
    "quality": "quality_80",
    "resource": {
        ".tag": "path",
        "path": "/a.docx"
    },
    "size": "w64h64"
}
ThumbnailV2Arg
resourcePathOrLinkInformation specifying which file to preview. This could be a path to a file, a shared link pointing to a file, or a shared link pointing to a folder, with a relative path.
formatThumbnailFormatThe format for the thumbnail image, jpeg (default) or png. For images that are photos, jpeg should be preferred, while png is better for screenshots and digital arts. The default for this union is jpeg.
sizeThumbnailSizeThe size for the thumbnail image. The default for this union is w64h64.
modeThumbnailModeHow to resize and crop the image to achieve the desired size. The default for this union is strict.
qualityinternalThumbnailQualityField is only returned for "internal" callers. Quality of the thumbnail image. The default for this union is quality_80.
 
/get_thumbnail_batch
VERSION

1

DESCRIPTION
Get thumbnails for a list of images. We allow up to 25 thumbnails in a single batch. This method currently supports files with the following file extensions: jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB in size won't be converted to a thumbnail.

URL STRUCTURE
https://content.dropboxapi.com/2/files/get_thumbnail_batch
AUTHENTICATION
User Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.content.read
EXAMPLE
Get access token for:
application_cuppen.app
curl -X POST https://content.dropboxapi.com/2/files/get_thumbnail_batch \
    --header "Authorization: Bearer <get access token>" \
    --header "Content-Type: application/json" \
    --data "{\"entries\":[{\"format\":\"jpeg\",\"mode\":\"strict\",\"path\":\"/image.jpg\",\"quality\":\"quality_80\",\"size\":\"w64h64\"}]}"
PARAMETERS
{
    "entries": [
        {
            "format": "jpeg",
            "mode": "strict",
            "path": "/image.jpg",
            "quality": "quality_80",
            "size": "w64h64"
        }
    ]
}
GetThumbnailBatchArg
Arguments for get_thumbnail_batch.
entriesList of (ThumbnailArg)List of files to get thumbnails.
 
/list_folder
VERSION

1

DESCRIPTION
Starts returning the contents of a folder. If the result's ListFolderResult.has_more field is true, call list_folder/continue with the returned ListFolderResult.cursor to retrieve more entries. If you're using ListFolderArg.recursive set to true to keep a local cache of the contents of a Dropbox account, iterate through each entry in order and process them as follows to keep your local state in sync: For each FileMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it and remove all its children. For each FolderMetadata, store the new entry at the given path in your local state. If the required parent folders don't exist yet, create them. If there's already something else at the given path, replace it but leave the children as they are. Check the new entry's FolderSharingInfo.read_only and set all its children's read-only statuses to match. For each DeletedMetadata, if your local state has something at the given path, remove it and all its children. If there's nothing at the given path, ignore this entry. Note: auth.RateLimitError may be returned if multiple list_folder or list_folder/continue calls with same parameters are made simultaneously by same API app for same user. If your app implements retry logic, please hold off the retry until the previous request finishes.

URL STRUCTURE
https://api.dropboxapi.com/2/files/list_folder
AUTHENTICATION
User Authentication, App Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.metadata.read
EXAMPLE
Get app key and secret for:
application_cuppen.app
curl -X POST https://api.dropboxapi.com/2/files/list_folder \
    --header "Authorization: Basic <get app key and secret>" \
    --header "Content-Type: application/json" \
    --data "{\"include_deleted\":false,\"include_has_explicit_shared_members\":false,\"include_media_info\":false,\"include_mounted_folders\":true,\"include_non_downloadable_files\":true,\"path\":\"/Homework/math\",\"recursive\":false}"
PARAMETERS
{
    "include_deleted": false,
    "include_has_explicit_shared_members": false,
    "include_media_info": false,
    "include_mounted_folders": true,
    "include_non_downloadable_files": true,
    "path": "/Homework/math",
    "recursive": false
}
ListFolderArg
pathString(pattern="(/(.|[\r\n])*)?|id:.*|(ns:[0-9]+(/.*)?)")A unique identifier for the file.
recursiveBooleanIf true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. In some cases, setting ListFolderArg.recursive to true may lead to performance issues or errors, especially when traversing folder structures with a large number of items. A workaround for such cases is to set ListFolderArg.recursive to false and traverse subfolders one at a time. The default for this field is False.
include_media_infodeprecatedBooleanField is deprecated. If true, FileMetadata.media_info is set for photo and video. This parameter will no longer have an effect starting December 2, 2019. The default for this field is False.
include_deletedBooleanIf true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False.
include_has_explicit_shared_membersBooleanIf true, the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.
include_mounted_foldersBooleanIf true, the results will include entries under mounted folders which includes app folder, shared folder and team folder. The default for this field is True.
limit UInt32(min=1, max=2000)?The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases. This field is optional.
shared_linkSharedLink?A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, ListFolderArg.path will be relative to root of the shared link. Only non-recursive mode is supported for shared link. This field is optional.
include_property_groupsTemplateFilterBase?If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.
include_non_downloadable_filesBooleanIf true, include files that are not downloadable, i.e. Google Docs. The default for this field is True.
 
/list_folder/continue
VERSION

1

DESCRIPTION
Once a cursor has been retrieved from list_folder, use this to paginate through all files and retrieve updates to the folder, following the same rules as documented for list_folder.

URL STRUCTURE
https://api.dropboxapi.com/2/files/list_folder/continue
AUTHENTICATION
User Authentication, App Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.metadata.read
EXAMPLE
Get app key and secret for:
application_cuppen.app
curl -X POST https://api.dropboxapi.com/2/files/list_folder/continue \
    --header "Authorization: Basic <get app key and secret>" \
    --header "Content-Type: application/json" \
    --data "{\"cursor\":\"ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu\"}"
PARAMETERS
{
    "cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
}
ListFolderContinueArg
cursorString(min_length=1)The cursor returned by your last call to list_folder or list_folder/continue. 

/list_folder/get_latest_cursor
VERSION

1

DESCRIPTION
A way to quickly get a cursor for the folder's state. Unlike list_folder, list_folder/get_latest_cursor doesn't return any entries. This endpoint is for app which only needs to know about new files and modifications and doesn't need to know about files that already exist in Dropbox.

URL STRUCTURE
https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor
AUTHENTICATION
User Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.metadata.read
EXAMPLE
Get access token for:
application_cuppen.app
curl -X POST https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor \
    --header "Authorization: Bearer <get access token>" \
    --header "Content-Type: application/json" \
    --data "{\"include_deleted\":false,\"include_has_explicit_shared_members\":false,\"include_media_info\":false,\"include_mounted_folders\":true,\"include_non_downloadable_files\":true,\"path\":\"/Homework/math\",\"recursive\":false}"
PARAMETERS
{
    "include_deleted": false,
    "include_has_explicit_shared_members": false,
    "include_media_info": false,
    "include_mounted_folders": true,
    "include_non_downloadable_files": true,
    "path": "/Homework/math",
    "recursive": false
}
ListFolderArg
pathString(pattern="(/(.|[\r\n])*)?|id:.*|(ns:[0-9]+(/.*)?)")A unique identifier for the file.
recursiveBooleanIf true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. In some cases, setting ListFolderArg.recursive to true may lead to performance issues or errors, especially when traversing folder structures with a large number of items. A workaround for such cases is to set ListFolderArg.recursive to false and traverse subfolders one at a time. The default for this field is False.
include_media_infodeprecatedBooleanField is deprecated. If true, FileMetadata.media_info is set for photo and video. This parameter will no longer have an effect starting December 2, 2019. The default for this field is False.
include_deletedBooleanIf true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False.
include_has_explicit_shared_membersBooleanIf true, the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.
include_mounted_foldersBooleanIf true, the results will include entries under mounted folders which includes app folder, shared folder and team folder. The default for this field is True.
limit UInt32(min=1, max=2000)?The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases. This field is optional.
shared_linkSharedLink?A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, ListFolderArg.path will be relative to root of the shared link. Only non-recursive mode is supported for shared link. This field is optional.
include_property_groupsTemplateFilterBase?If set to a valid list of template IDs, FileMetadata.property_groups is set if there exists property data associated with the file and each of the listed templates. This field is optional.
include_non_downloadable_filesBooleanIf true, include files that are not downloadable, i.e. Google Docs. The default for this field is True.

/list_folder/longpoll
VERSION

1

DESCRIPTION
A longpoll endpoint to wait for changes on an account. In conjunction with list_folder/continue, this call gives you a low-latency way to monitor an account for file changes. The connection will block until there are changes available or a timeout occurs. This endpoint is useful mostly for client-side apps. If you're looking for server-side notifications, check out our webhooks documentation.

URL STRUCTURE
https://notify.dropboxapi.com/2/files/list_folder/longpoll
AUTHENTICATION
No Authentication, Dropbox-API-Select-Admin (Whole Team)
ENDPOINT FORMAT
RPC
REQUIRED SCOPE
files.metadata.read
EXAMPLE
Get access token for:
application_cuppen.app
curl -X POST https://notify.dropboxapi.com/2/files/list_folder/longpoll \
    --header "Content-Type: application/json" \
    --data "{\"cursor\":\"ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu\",\"timeout\":30}"
PARAMETERS
{
    "cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
    "timeout": 30
}
ListFolderLongpollArg
cursorString(min_length=1)A cursor as returned by list_folder or list_folder/continue. Cursors retrieved by setting ListFolderArg.include_media_info to true are not supported.
timeoutUInt64(min=30, max=480)A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts. The default for this field is 30.